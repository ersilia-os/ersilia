FROM ersiliaos/ersiliapack-conda-VERSION:latest AS build
ARG MODEL=eos_identifier
ENV MODEL=$MODEL
WORKDIR /root
COPY ./$MODEL /root/$MODEL
RUN apt-get update && \ 
    apt-get install -y git && \
    mkdir /root/bundles && ersilia_model_pack --repo_path $MODEL --bundles_repo_path /root/bundles && \
    apt-get remove --purge -y git && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN conda create --name baseclone --clone base
RUN conda install -c conda-forge conda-pack
RUN conda-pack -n baseclone -o /tmp/env.tar && \
 mkdir /venv && cd /venv && tar -xf /tmp/env.tar && \
 rm /tmp/env.tar
RUN /venv/bin/conda-unpack



FROM debian:12.7-slim
WORKDIR /root
ARG MODEL=eos_identifier
ENV MODEL=$MODEL

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
# We need this because the model's run.sh will look for Python in this path
ENV PATH="/usr/bin/conda/bin/:$PATH"


COPY --from=build /root/bundles /root/bundles
COPY --from=build /root/docker-entrypoint.sh /root/docker-entrypoint.sh
COPY --from=build /venv /usr/bin/conda
RUN conda install -c conda-forge xorg-libxrender xorg-libxtst
RUN cp /root/bundles/$MODEL/*/information.json /root/information.json && \
    cp /root/bundles/$MODEL/*/api_schema.json /root/api_schema.json && \
    cp /root/bundles/$MODEL/*/status.json /root/status.json && \
    mkdir -p /root/model/framework/examples && \
    cp /root/bundles/$MODEL/*/model/framework/examples/output.csv /root/model/framework/examples/output.csv && \
    cp /root/bundles/$MODEL/*/model/framework/examples/input.csv /root/model/framework/examples/input.csv && \
    chmod + docker-entrypoint.sh
EXPOSE 80
ENTRYPOINT [ "sh", "docker-entrypoint.sh"]