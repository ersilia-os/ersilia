name: Run PyTest

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3.5.3

      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH

      - name: Source conda
        run: source $CONDA/etc/profile.d/conda.sh
        
      - name: Set Python to 3.10.10
        run:
         conda install -y python=3.10.10  

      - name: Install dependencies
        run: |
          source activate
          conda init
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge

      - name: Install ersilia
        run: |
          source activate
          python --version
          echo "After conda init"
          conda init
          python -m pip install -e .[test]

      - name: Run pytest
        run: |
          source activate          
          pip install pytest
          pytest

  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      tag-file-modified: ${{ steps.filter.outputs.tag-file }}
    steps:
      - uses: actions/checkout@v4

      - name: Path Filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            tag-file:
              - 'ersilia/hub/content/metadata/tag.txt'

      - name: Tag file modified
        if: steps.filter.outputs.tag-file == 'true'
        run: echo "Tag file modified"

      - name: Tag file not modified
        if: steps.filter.outputs.tag-file != 'true'
        run: echo "Tag file not modified"

  update-model-request:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.tag-file-modified == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Run update_model_request.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python .github/scripts/update_model_request.py

      - name: Commit and push changes
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add .github/issue_template/model_request.yml
          git commit -m "Update model_request.yml with new tags from tag.txt"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
