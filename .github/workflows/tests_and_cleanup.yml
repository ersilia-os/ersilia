name: Test Ersilia codebase

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff
        run: ruff check --output-format=github .

  run-pytest:
    runs-on: ubuntu-latest
    needs: ruff-format
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10.10"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install -e .[test]

      - name: Run pytest
        run: |     
          pip install pytest pytest-benchmark pytest-asyncio rdkit-pypi nox rich fuzzywuzzy scipy pyairtable
          pytest

  run-default-cli-test:
    needs: run-pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v4.2.2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install -e .[test]

      - name: Run default CLI test
        run: |
          nox -f test/playground/noxfile.py -s execute -p 3.12

  run-cli-test-multiple:
    needs: run-default-cli-test
    defaults:
      run:
        shell: bash -el {0}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10.10"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install -e .[test]

      - name: Run CLI Test Multiple
        run: |          
          nox -f test/playground/noxfile.py -s execute -p 3.12 -- --cli serve --fetch from_dockerhub --runner multiple --silent false

  generate-nox-parl-jobs:
      needs: run-pytest
      outputs:
        session: ${{ steps.set-matrix.outputs.session }}
      defaults:
        run:
          shell: bash -el {0}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4.2.2
        - uses: conda-incubator/setup-miniconda@v3
          with:
            auto-update-conda: true
            python-version: "3.12"

        - name: Install dependencies
          run: |
            conda install git-lfs -c conda-forge
            git-lfs install
            conda install gh -c conda-forge
            python -m pip install -e .[test]
      
        - id: set-matrix
          run: echo "session=$(nox -f test/playground/noxfile.py --json -l 2>&1 | tail -n 1 | jq -c '[.[].session]')" | tee --append $GITHUB_OUTPUT

  run-cli-test-parallel:
    name: Session ${{ matrix.session }} on ${{ matrix.os }} - Fetch ${{ matrix.fetch_source }}
    needs: generate-nox-parl-jobs
    defaults:
      run:
        shell: bash -el {0}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        session: ${{ fromJson(needs.generate-nox-parl-jobs.outputs.session) }}
        fetch_source: ["from_github", "from_s3", "from_dockerhub"]

        exclude:
          - os: macos-latest
            fetch_source: from_dockerhub  
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install -e .[test]

      - run: |
          nox -f test/playground/noxfile.py -s "${{ matrix.session }}" -- --cli fetch serve run --fetch ${{ matrix.fetch_source }} --host gh

  update-model-request_template:
    needs: run-pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Path Filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            tag-file:
              - 'ersilia/hub/content/metadata/tag.txt'

      - name: Set up Python
        if: steps.filter.outputs.tag-file == 'true'
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        if: steps.filter.outputs.tag-file == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Run update_model_request_template.py
        if: steps.filter.outputs.tag-file == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python .github/scripts/update_model_request_template.py

      - name: Commit and push changes
        if: steps.filter.outputs.tag-file == 'true'
        uses: actions-js/push@v1.5
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "Update model request template [skip ci]"
          repository: "ersilia-os/ersilia"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          branch: "master"
