# Single workflow to increment ersilia version in pyproject.toml,
# tag and push the commit to the repository, release to GitHub, PyPI, Conda, and DockerHub

name: Ersilia Release

on:
  workflow_dispatch: # run manually
  schedule:
    - cron: ' 0 3 1 * *' # run at 3:00 AM on the first day of the month
  
jobs:
  # Job to increment version and manage releases
  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }} # Output the version for use in subsequent jobs
    steps:

      - name: Checkout persist credentials
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3.5.3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0             # Fetch full history, otherwise, you will fail to push refs to dest repo
      
      - name: Increment package version
        id: version
        run: |
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/static_version_writer.py 
          echo "VERSION=$(python static_version_writer.py)" >> "$GITHUB_OUTPUT"
          rm static_version_writer.py
      
      - name: Create a release tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use GitHub token for authentication
        run: |
          # git config http.sslVerify false
          # repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --local user.email "ersilia-bot@users.noreply.github.com"
          git config --local user.name "ersilia-bot"
          git tag -a "v${{ steps.version.outputs.VERSION }}" -m "v${{ steps.version.outputs.VERSION }}"
          # git push "${repo}" origin "v${{ steps.version.outputs.VERSION }}"

      - name: Update version in CITATION.cff
        id: update-citation
        env:
          VERSION: ${{ steps.version.outputs.VERSION }} # Pass the new version as an environment variable
        run: |
          pip install PyYAML
          python -c "
          import os
          import yaml
          with open('CITATION.cff', 'r') as file:
              content = file.read()
          citation = yaml.safe_load(content)
          citation['version'] = os.environ['VERSION']
          with open('CITATION.cff', 'w') as file:
              yaml.dump(citation, file, default_flow_style=False, sort_keys=False)
          "

      - name: Commit and push changes done to the static version file and pyproject.toml
        uses: actions-js/push@5a7cbd780d82c0c937b5977586e641b2fd94acc5 # pin@v1.5
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "update version [skip ci]"
          repository: "ersilia-os/${{ github.event.repository.name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          amend: true                # Amend the previous commit instead of creating a new one
          force: true                # Force push changes to overwrite any existing commit if necessary
          branch: "master"
          tags: true


  gh-release:
    runs-on: ubuntu-latest          # Specify environment for GitHub release job
    needs: version                  # This job depends on completion of the 'version' job
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4   # Checkout code from repository
      - name: Create GitHub release
        id: gh_release
        run: |
          # Get the version file that we updated in the previous job
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/ersilia/_static_version.py
        
          month=$(date +'%B')
          year=$(date +'%Y')
          title="$month $year"
          version=`sed -n 's/.*version = "\([^"]*\)".*/\1/p' _static_version.py`
          git fetch --tags
          gh release create "v$version" --title "$title" --generate-notes

  pypi-release:
    runs-on: ubuntu-latest       # Specify environment for PyPI release job
    needs: version               # This job depends on completion of the 'version' job
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3.5.3
        with:
          ref: master

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # pin@v5.2.0
        with:
          python-version: '3.8'
          # cache: 'pip' # caching pip dependencies

      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v3.0.0     # Use Poetry action for dependency management
            
      - name: Build and publish
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git pull origin master 
          poetry config -- http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
          poetry --build publish 

  upload-ersilia-base-to-dockerhub:
    runs-on: ubuntu-latest      # Specify environment for Docker Hub upload job
    needs: version              # This job depends on completion of the 'version' job
    strategy:
      matrix:
        build-version: ["legacy-bentoml", "multistage-condapack"]  # Build different versions using matrix strategy
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3  # Set up QEMU for multi-platform builds

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3    # Set up Docker Buildx for advanced building capabilities

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Checkout persist credentials
        uses: actions/checkout@master
        with:
          persist-credentials: false  # Prevents persisting GITHUB_TOKEN; use personal token instead
          fetch-depth: 0              # Fetch full history, otherwise, you will fail to push refs to dest repo

      - name: Get version
        run: |
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/ersilia/_static_version.py
          mv _static_version.py ersilia/. 

      - name: Copy Dockerfile to base directory
        run: |
          cp dockerfiles/dockerize-${{ matrix.build-version }}/base/* . || {echo 'Failed to copy Dockerfile'; exit 1;}
          
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ersiliaos/base-${{ matrix.build-version }}
          # Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha 

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

